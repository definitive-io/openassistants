"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[843],{156:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var s=t(5893),i=t(1151);const o={sidebar_position:1},a="Create a custom function",c={id:"extending-openassistants/create-a-custom-function",title:"Create a custom function",description:"You can create your own custom functions in OpenAssistants by extending the base class BaseFunction.",source:"@site/docs/extending-openassistants/create-a-custom-function.md",sourceDirName:"extending-openassistants",slug:"/extending-openassistants/create-a-custom-function",permalink:"/openassistants/docs/extending-openassistants/create-a-custom-function",draft:!1,unlisted:!1,editUrl:"https://github.com/definitive-io/openassistants/docs/extending-openassistants/create-a-custom-function.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Extending OpenAssistants",permalink:"/openassistants/docs/category/extending-openassistants"},next:{title:"Contributing to openassistants",permalink:"/openassistants/docs/contributing"}},r={},u=[];function d(n){const e={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"create-a-custom-function",children:"Create a custom function"}),"\n",(0,s.jsxs)(e.p,{children:["You can create your own custom functions in OpenAssistants by extending the base class ",(0,s.jsx)(e.code,{children:"BaseFunction"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["Let's take a look at the included ",(0,s.jsx)(e.code,{children:"PythonEvalFunction"})," to get a sense of how this works."]}),"\n",(0,s.jsx)(e.p,{children:"The following Python function:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'\nclass PythonEvalFunction(BaseFunction):\n    type: Literal["PythonEvalFunction"] = "PythonEvalFunction"\n    parameters: BaseJSONSchema\n    python_code: str\n\n    async def execute(\n        self, deps: FunctionExecutionDependency\n    ) -> AsyncStreamVersion[Sequence[FunctionOutput]]:\n        # This is unsafe, make sure you trust python_code provided in the YAML\n        exec_locals: Dict[str, Any] = {}\n\n        exec(self.python_code, {}, exec_locals)\n\n        main_func: Callable[[dict], AsyncStreamVersion[List[dict]]] = exec_locals.get(\n            "main", None\n        )\n\n        if main_func is None:\n            raise ValueError(f"No main function defined for action function: {self.id}")\n\n        if not inspect.isasyncgenfunction(main_func):\n            raise ValueError(\n                f"Main function for action function {self.id} is not an async generator"\n            )\n\n        try:\n            async for output in main_func(deps.arguments):\n                parsed_output: List[FunctionOutput] = TypeAdapter(\n                    List[FunctionOutput]\n                ).validate_python(output)\n                yield parsed_output\n\n        except Exception as e:\n            raise RuntimeError(\n                f"Error while executing action function {self.id}. function raised: {e}"\n            ) from e\n\n    async def get_parameters_json_schema(self) -> dict:\n        return self.parameters.json_schema\n'})}),"\n",(0,s.jsx)(e.p,{children:"Note the following:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Your class must have an ",(0,s.jsx)(e.code,{children:"execute"})," function which runs asyncronously, which means it must be prepended with ",(0,s.jsx)(e.code,{children:"async"})," where results are ",(0,s.jsx)(e.code,{children:"yielded"}),", not ",(0,s.jsx)(e.code,{children:"returned"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"AsyncStreamVersion[Sequence[FunctionOutput]]"}),": this means that the ",(0,s.jsx)(e.code,{children:"execute"})," function yields a list of ",(0,s.jsx)(e.code,{children:"FunctionOutput"})," type. ",(0,s.jsx)(e.code,{children:"FunctionOutput"})," is a generic type that encompasses ",(0,s.jsx)(e.code,{children:"TextOutput"}),", ",(0,s.jsx)(e.code,{children:"DataFrameOutput"}),", ",(0,s.jsx)(e.code,{children:"VisualizationOutput"})," and ",(0,s.jsx)(e.code,{children:"FollowUpsOutput"}),". Since it's a sequence, you can return more than one type in the same query response (i.e. return a table via ",(0,s.jsx)(e.code,{children:"DataFrameOutput"})," and then a visualization of the data via ",(0,s.jsx)(e.code,{children:"VisualizationOutput"})," in the same chat response). Note the output of function ",(0,s.jsx)(e.code,{children:"main"})," in the yaml definition below for proper formatting"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Is used in a YAML function definition as follows:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'name: send_purchase_inquiry_email\ndisplay_name: Send purchase inquiry email\ndescription: |\n  send an inquiry email about a recent purchase to an employee\nsample_questions:\n  - send purchase inquiry email\nparameters:\n  json_schema:\n    type: object\n    properties:\n      to:\n        type: string\n        format: email\n        description: email address to send to\n    required:\n      - to\ntype: PythonEvalFunction\npython_code: |\n  async def main(args: dict):\n    import asyncio\n    yield [{"type": "text", "text": "Sending email..."}]\n    await asyncio.sleep(2)\n    yield [{"type": "text", "text": f"Inquiry email about recent purchase sent to: {args.get(\'to\')}"}]\n'})}),"\n",(0,s.jsxs)(e.p,{children:["As you can see, the ",(0,s.jsx)(e.code,{children:"python_code"})," and ",(0,s.jsx)(e.code,{children:"parameters"})," YAML properties are passed into the class constructor to make sure the provided code in the YAML\ncan be used by the function's implementation."]}),"\n",(0,s.jsxs)(e.p,{children:["Check out the ",(0,s.jsx)(e.a,{href:"https://github.com/definitive-io/openassistants/blob/main/examples/fast-api-server/fast_api_server/main.py",children:"example app"})," to see how you can add custom functions to the assistant library."]})]})}function l(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>a});var s=t(7294);const i={},o=s.createContext(i);function a(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);