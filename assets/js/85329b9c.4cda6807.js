"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[73],{2110:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var o=t(5893),s=t(1151);const i={sidebar_position:1},a="PythonEvalFunction",r={id:"query-functions/PythonEvalFunction",title:"PythonEvalFunction",description:"The PythonEvalFunction query type enables the user to write a custom python function that OpenAssistants would execute on command.",source:"@site/docs/query-functions/PythonEvalFunction.md",sourceDirName:"query-functions",slug:"/query-functions/PythonEvalFunction",permalink:"/openassistants/docs/query-functions/PythonEvalFunction",draft:!1,unlisted:!1,editUrl:"https://github.com/definitive-io/openassistants/docs/query-functions/PythonEvalFunction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Query Functions",permalink:"/openassistants/docs/category/query-functions"},next:{title:"DuckDBQueryFunction",permalink:"/openassistants/docs/query-functions/DuckDBQueryFunction"}},c={},u=[];function d(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"pythonevalfunction",children:"PythonEvalFunction"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"PythonEvalFunction"})," query type enables the user to write a custom python function that OpenAssistants would execute on command."]}),"\n",(0,o.jsxs)(e.p,{children:["Here's an example YAML that uses the ",(0,o.jsx)(e.code,{children:"PythonEvalFunction"})," to send an email"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'name: send_purchase_inquiry_email\ndisplay_name: Send purchase inquiry email\ndescription: |\n  send an inquiry email about a recent purchase to an employee\nsample_questions:\n  - send purchase inquiry email\nparameters:\n  json_schema:\n    type: object\n    properties:\n      to:\n        type: string\n        format: email\n        description: email address to send to\n    required:\n      - to\ntype: PythonEvalFunction\npython_code: |\n  async def main(args: dict):\n    import asyncio\n    yield [{"type": "text", "text": "Sending email..."}]\n    await asyncio.sleep(2)\n    yield [{"type": "text", "text": f"Inquiry email about recent purchase sent to: {args.get(\'to\')}"}]\n'})}),"\n",(0,o.jsx)(e.p,{children:"The information produced by these queries is part of the conversation after use and can be used by the LLM to call other functions."}),"\n",(0,o.jsxs)(e.p,{children:["To use, write your own custom python function(s) and store it in the ",(0,o.jsx)(e.code,{children:"python_code"})," parameter."]})]})}function l(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>a});var o=t(7294);const s={},i=o.createContext(s);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);